(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{453:function(t,s,a){"use strict";a.r(s);var e=a(23),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css-技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-技巧"}},[t._v("#")]),t._v(" CSS 技巧")]),t._v(" "),a("h2",{attrs:{id:"css实现文本溢出显示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css实现文本溢出显示"}},[t._v("#")]),t._v(" css实现文本溢出显示 ...")]),t._v(" "),a("p",[a("strong",[t._v("单行文本 :")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("overflow: hidden;\ntext-overflow:ellipsis;\nwhite-space: nowrap;\n当然还需要加宽度width属来兼容部分浏览。\n")])])]),a("p",[a("strong",[t._v("多行文本（如3行）")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("display: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 3;\noverflow: hidden;\n")])])]),a("blockquote",[a("p",[t._v("1、-webkit-line-clamp用来限制在一个块元素显示的文本的行数。 为了实现该效果，它需要组合其他的WebKit属性。常见结合属性：\n2、display: -webkit-box; 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。\n3、-webkit-box-orient 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。")])]),t._v(" "),a("h2",{attrs:{id:"postion-fixed和transform的冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postion-fixed和transform的冲突"}},[t._v("#")]),t._v(" postion fixed和transform的冲突")]),t._v(" "),a("p",[t._v("我们知道这里 fixed 默认参照对像是"),a("strong",[t._v("可视窗口")]),t._v("，如果transformEle (父元素)使用了transform，而fixedEle (子元素)使用了position: fixed，那么position: fixed不会有固定在可视窗口上，实际结果相当于相对transformEle元素定位，"),a("strong",[t._v("就是fixed相对的不是可视窗口，而是transformELe")]),t._v(", 产生这样的原因主要是因为"),a("strong",[t._v("transform和position: fixed使用了不同的坐标系统")])]),t._v(" "),a("h2",{attrs:{id:"已知父级盒子的宽高，子级img宽高未知，想让img铺满父级盒子且图片不能变形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已知父级盒子的宽高，子级img宽高未知，想让img铺满父级盒子且图片不能变形"}},[t._v("#")]),t._v(" 已知父级盒子的宽高，子级img宽高未知，想让img铺满父级盒子且图片不能变形")]),t._v(" "),a("p",[t._v("利用 CSS 的"),a("code",[t._v("object-fit")]),t._v(" 属性")]),t._v(" "),a("p",[t._v("关于"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-fit",target:"_blank",rel:"noopener noreferrer"}},[t._v("object-fit 详细"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-fit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cover"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"设置-平行-rem-布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置-平行-rem-布局"}},[t._v("#")]),t._v(" 设置 平行 rem 布局")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("scss 文件\n"),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ratio")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 375 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("px2rem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$px")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$px")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ratio")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然后所需要使用 px2rem() 的文件引入即可")]),t._v(" "),a("h2",{attrs:{id:"什么是替换元素？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是替换元素？"}},[t._v("#")]),t._v(" 什么是替换元素？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("通过修改某个属性值呈现的内容就可以被替换的元素就称为“替换元素”。因此，<img>、<object>、<video>、<iframe>或者表\n单元素<textarea>和<input>和<select>都是典型的替换元素。\n\n替换元素除了内容可替换这一特性以外，还有以下一些特性。\n\n（1）内容的外观不受页面上的CSS的影响。用专业的话讲就是在样式表现在CSS作用域之外。如何更改替换元素本身的外观需要\n类似appearance属性，或者浏览器自身暴露的一些样式接口，\n\n（2）有自己的尺寸。在Web中，很多替换元素在没有明确尺寸设定的情况下，其默认的尺寸（不包括边框）是300像素×150像\n素，如<video>、<iframe>或者<canvas>等，也有少部分替换元素为0像素，如<img>图片，而表单元素的替换元素\n的尺寸则和浏览器有关，没有明显的规律。\n\n（3）在很多CSS属性上有自己的一套表现规则。比较具有代表性的就是vertical-align属性，对于替换元素和非替换元素，ve\nrtical-align属性值的解释是不一样的。比方说vertical-align的默认值的baseline，很简单的属性值，基线之意，\n被定义为字符x的下边缘，而替换元素的基线却被硬生生定义成了元素的下边缘。\n\n（4）所有的替换元素都是内联水平元素，也就是替换元素和替换元素、替换元素和文字都是可以在一行显示的。但是，替换元素默认\n的display值却是不一样的，有的是inline，有的是inline-block。\n")])])]),a("Vssue")],1)}),[],!1,null,null,null);s.default=n.exports}}]);